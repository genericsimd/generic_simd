OS  = $(shell uname)
ifeq ($(OS), AIX)
 ECHO = echo
else
 ECHO = echo -e
endif

CXX=g++
CXXFLAGS=-O2 -m64 -I${BASE_DIR}/include
# -fdump-tree-optimized
CC=gcc
CCFLAGS=-O3 -m64 -I${BASE_DIR}/include
LIBS=-lm -lstdc++

CCFLAGS+= -Wno-int-to-pointer-cast
CXXFLAGS+= -Wno-int-to-pointer-cast
##########################################################
# Platform specific options
# ppc64 or intel
##########################################################

MACHINE=$(shell uname -m)
ifeq ($(firstword $(filter ppc64,$(MACHINE))),ppc64)
  CXXFLAGS += -mno-vrsave -mvsx -flax-vector-conversions -mcpu=power7
  CCFLAGS += -mno-vrsave -mvsx -flax-vector-conversions -mcpu=power7
  ifeq (${PPC_ISA}, P9)
    PLATFORM = ppc64_P9
    CCFLAGS += -D__POWER8 -D__POWER9
    CXXFLAGS += -D__POWER8 -D__POWER9
  else
  ifeq (${PPC_ISA}, P8)
    PLATFORM = ppc64_P8
    CCFLAGS += -D__POWER8
    CXXFLAGS += -D__POWER8
  else
    PLATFORM = ppc64_P7
  endif
  endif
else
  PLATFORM=x86-64
  CCFLAGS += -msse4.2
  CXXFLAGS += -msse4.2
endif


ifeq (${BASE},1)
  CXXFLAGS+=-DBASE_VERSION
  TARGET_NAME+=_base
else
ifeq (${TRANSPOSE},1)
  CXXFLAGS+=-DTRANSPOSED_LAYOUT
  TARGET_NAME+=_trans
endif
ifeq (${SSE},1)
  CXXFLAGS+=-DENABLE_SSE -msse4.2 -DFINANCE_STATIC
  TARGET_NAME+=_sse
endif
ifeq (${SIMD},1)
  CXXFLAGS+=-DENABLE_SIMD -fpermissive
  TARGET_NAME+=_simd
endif
endif

ifeq (${USE_KERNEL},1)
  CXXFLAGS+=-DENABLE_KERNEL -lKernel -L../../kernels/ -I../../kernels/include
  TARGET_NAME+=_kernel
endif

empty:=
space:= $(empty) $(empty)
TARGET=$(subst $(space),,$(TARGET_NAME))

default: $(TARGET)

all: $(TARGET) 

help:
	@-$(ECHO) "\nUsage:  gnumake [options] targets"
	@-$(ECHO) "  Valid 'targets' are:"
	@-$(ECHO) "         ${TARGET}: build cva_kernel"
	@-$(ECHO) "             clean: cleanup generated files and logs"
	@-$(ECHO) "\n  Valid 'options' are:"
	@-$(ECHO) "     BASE=1     : build binary disabling the two template specialization"
	@-$(ECHO) "     TRANSPOSE=1: use transposed sheet layout"
	@-$(ECHO) "          SSE=1: enable SSE SIMD"
	@-$(ECHO) "          SIMD=1: enable Generic SIMD based on the platform"
	@-$(ECHO) "    USE_KERNEL=1: build binary using C-kernels"

.PHONY: clean

${TARGET}: 
	$(CXX) $(CXXFLAGS) -o ${TARGET} ${TARGET_SRC} $(LIBS)

test:
	echo $(TARGET)
