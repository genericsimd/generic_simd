/**

 @mainpage  Generic SIMD Library
 
 @tableofcontents

 The Generic SIMD Library aims at providing a portable intrinsics interface that support multiple SIMD ISA. 
 The library is designed for C++ application.

 @section example Hello World Example
 
 Here is the helloWorld example of using the generic SIMD intrinsics interface.
 
@code{hello.cpp}
#include <iostream>
#include <gsimd.h>

int main (int argc, char* argv[])
{
    svec4_f v1(1.1, 2.2, 3.3, 4.4);
    svec4_f v2 = v1 * 2;
    std::cout << "Hello World: " << v2 << std::endl;
    return 0;
}
@endcode

 The generic SIMD library is included from the header file
 <gsimd.h>. Using proper platform-specific compiler flags, the code
 can be compiled by standard G++ into binaries for different target
 SIMD architectures.

 In this example, svec4_f is the data type provided by the library to
 represent a SIMD vector of 4 floats. Operators such as "*", "<<", and
 constructors are overloaded to represent operations on short SIMD
 vectors.

 @section features Key features

 Current release supports four target platforms:
 <ul>
   <li> SSE4.2 </li>
   <li> VSX/VMX for P7</li>
   <li> VSX for P8</li>
   <li> Scalar emulation of short SIMD vectors</li>
 </ul>

 It supports short 4-element vectors for all primitive element data
 types. Short SIMD vectors of other power-of-2 lengths are under
 development.

 @section info More Information

<ul>
<li>@ref getting_started</li>
<li>@ref programming_guide</li>
<li>@ref developer_guide</li>
<li>@ref performance</li>
<li>@ref issues</li>
<li>@ref history</li>
</ul>

*/